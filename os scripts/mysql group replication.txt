集群信息规划：
节点名	Internal port	  Db port	datadir	conf	  mode
s1	     5701	  9001	/data/for_gr/s1	s1.cnf	read/write
s2	     5702	  9002	/data/for_gr/s2	S2.cnf	read/write
s3	     5703	  9003	/data/for_gr/s3	S3.cnf	read/write
s4	     5704	  9004	/data/for_gr/s4	S4.cnf	read/write
s5	     5705	  9005	/data/for_gr/s5	S5.cnf	read/write

以上可在单节点或多节点部署

以下步骤为单节点安装
已编译安装了mysql二级制软件
/usr/local/mysql

创建数据文件目录
for i in {1..5};do mkdir -p /data/for_gr/s$i;done
mkdir /data/conf/for_gr/
chown -R mysql:mysql /data/

生成配置文件
cat /root/s1.cnf <<eof
[mysqld]
# server configuration
datadir=/data/for_gr/s1    #不同节点，数据目录修改即可
basedir=/opt/mysql-5.7.17
port=9001                   #修改为响应节点的端口，用户客户端连接
socket=/data/for_gr/s1/s1.sock  #socket也改到响应数据目录

server_id=1                       #server-id别忘记改，就1-9吧
gtid_mode=ON
enforce_gtid_consistency=ON
master_info_repository=TABLE
relay_log_info_repository=TABLE
binlog_checksum=NONE
log_slave_updates=ON
log_bin=binlog
binlog_format=ROW
innodb_buffer_pool_instances=4
innodb_buffer_pool_size=1G
innodb_flush_log_at_trx_commit=2
sync_binlog=0
#for parallel apply binlog
slave-parallel-type=LOGICAL_CLOCK
slave-parallel-workers=4
slave_preserve_commit_order=on
#for group replication
transaction_write_set_extraction=XXHASH64
loose-group_replication_group_name="aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
loose-group_replication_start_on_boot=off
loose-group_replication_local_address= "127.0.0.1:5701" #改一下端口就可以了
loose-group_replication_group_seeds= "127.0.0.1:5701,127.0.0.1:5702,127.0.0.1:5703,127.0.0.1:5704,127.0.0.1:5705"
loose-group_replication_bootstrap_group= off
loose-group_replication_single_primary_mode=false
eof

复制配置文件
for i in {2..5};do cp s1.cnf s$i.cnf;done

修改配置文件中的参数项
for i in {2..5};do sed -i "s/s1/s$i/g" s$i.cnf;done
for i in {2..5};do sed -i "s/server_id=1/server_id=$i/g" s$i.cnf;done
for i in {2..5};do sed -i "s/port=9001/port=900$i/g" s$i.cnf;done
for i in {2..5};do sed -i "s/loose-group_replication_local_address= \"127.0.0.1:5701\"/loose-group_replication_local_address= \"127.0.0.1:570$i\"/g" s$i.cnf;done

cp /root/s*.cnf /data/conf/for_gr/

初始化数据库
for i in {1..5};do /usr/local/mysql/bin/mysqld --initialize-insecure --basedir=/usr/local/mysql --datadir=/data/for_gr/s$i ;done;

启动数据库
for i in {1..5}; do /usr/local/mysql/bin/mysqld_safe --defaults-file=/data/conf/for_gr/s$i.cnf &  done

创建复制、管理用户
cat ~/user.sql <<eof
SET SQL_LOG_BIN=0;
CREATE USER rpl_user@'%';
GRANT REPLICATION SLAVE ON *.* TO rpl_user@'%' IDENTIFIED BY 'rpl_pass';
CREATE USER dbmon@'%';
GRANT ALL PRIVILEGES ON *.* TO dbmon@'%' IDENTIFIED BY 'dbmon';
FLUSH PRIVILEGES;
SET SQL_LOG_BIN=1;
CHANGE MASTER TO MASTER_USER='rpl_user', MASTER_PASSWORD='rpl_pass' FOR CHANNEL 'group_replication_recovery';

for i in {1..5};do /usr/local/mysql/bin/mysql -S /data/for_gr/s$i/s$i.sock -e "source /home/mysql/user.sql";done

初始化MGR
启动主节点
/usr/local/mysql/bin/mysql -S /data/for_gr/s1/s1.sock
INSTALL PLUGIN group_replication SONAME 'group_replication.so';
SET GLOBAL group_replication_bootstrap_group=ON;
START GROUP_REPLICATION;
SET GLOBAL group_replication_bootstrap_group=OFF;
SELECT * FROM performance_schema.replication_group_members;

启动其余节点
for i in {2..5};do /usr/local/mysql/bin/mysql -S /data/for_gr/s$i/s$i.sock -e "INSTALL PLUGIN group_replication SONAME 'group_replication.so';START GROUP_REPLICATION;";done
/usr/local/mysql/bin/mysql -S /data/for_gr/s1/s1.sock -e "SELECT * FROM performance_schema.replication_group_members;"

MGR管理：
MGR集群关闭
for i in {1..5};do /usr/local/mysql/bin/mysql -S /data/for_gr/s$i/s$i.sock -e "STOP GROUP_REPLICATION;";done

MGR集群启动
/usr/local/mysql/bin/mysql -S /data/for_gr/s5/s5.sock -e "SET GLOBAL group_replication_bootstrap_group=ON;START GROUP_REPLICATION;SET GLOBAL group_replication_bootstrap_group=OFF;"
for i in {1..4};do ./bin/mysql -S /data/for_gr/s$i/s$i.sock -e "START GROUP_REPLICATION;";done
