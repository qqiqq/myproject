设置字符串键值
set foo bar

查询字符串
get foo

设置多个字符串键值
mset a 1 b 2 c 3 d 4

查询多个字符串
mget a b c d

设置字符串时，对应键不存在，否则设置失败，
setnx hello world
可用于分布式事务锁：https://redis.io/topics/distlock


计数
incr counter

自增还有以下函数
decr key 自减
incrby key increment 自增指定值
decrby key decrement 自减指定值
incrbyfloat key increment 自增指定浮点值

键值后追加
APPEND hello ' and beijing'

键值字符串长度
STRLEN hello

设置字符串键值，并返回被覆盖的原值
getset hello world

设置字符串键值，从指定位置（0）开始，替换成指定值（lol）
SETRANGE hello 0 lol

从指定位置范围内获取字符串键值
GETRANGE hello 1 3

hash结构
适用于存储关系型数据
设置哈希值，user:1键的name域（field）的值为tom
hset user:1 name tom

查询哈希值，user:1键的name域的值
hget user:1 name

删除哈希
HDEL user:1 age

计算哈希下的field数量
HLEN user:1

查询哈希下多个field的值
hmget user:1 name age

设置哈希下多个field的值
hmset user:2 name mike age 12 city tianjin

查询指定键下所有field名字
hkeys user:2

查询指定键下所有field的值
hvals user:2

查询指定键下所有field-value对
HGETALL user:2

判断指定field是否存在
HEXISTS user:2 name

指定键的field的值递增指定值
HINCRBY user:2 age 1

指定键的field的值字节长度
HSTRLEN user:2 name


list操作
从右端向list中插入数据
rpush listkey c b a
从左端插入
lpush listkey c b a

从左端根据指定范围查询list，-1为最后一个index
lrange listkey 0 -1

在元素a前插入元素x
LINSERT listkey before a x
在元素4后插入元素10
linsert listkey after 4 10

查询指定位置的元素值
lindex listkey -1

查看list的长度（元素数量）
llen listkey

从list左端弹出数据
lpop listkey
从右端弹出
rpop listkey

从左端开始，删除3个元素a
LREM listkey 3 a
从右端开始，删除2个元素a
LREM listkey -2 a
删除所有元素5
lrem listkey 0 5

保留指定范围的数据
LTRIM listkey 0 -3

修改指定元素的值
lset listkey 3 xxx

从指定的list中pop元素，可以设置timeout（0）
brpop list1 list 2 list3 0
timeout为0时一直等待队列中填充数据（若队列为空）
一旦指定队列中有数据，将会在第一个发起brpop的会话中反馈元素

以下是适用list的应用场景
lpush+lpop=Stack（栈）
lpush+rpop=Queue（队列）
lpsh+ltrim=Capped Collection（有限集合）
lpush+brpop=Message Queue（消息队列）