### mysql slow log config ###
input {
  file {
    type => "mysql-slow"
    path => "/var/log/mysql/mysql-slow.log"
    # for multiline in log
    codec => multiline {
      # 所有以# User开始的语句为多行的首句
      pattern => "^# User@Host:"
      negate => true
      what => "previous"
    }
  }
}

filter {
  # drop sleep events
  # 删除多余的sleep语句
  grok {
    match => { "message" => "SELECT SLEEP" }
    # 为匹配的语句添加tag
    add_tag => [ "sleep_drop" ]
    # prevent default _grokparsefailure tag on real records
    # 避免未能匹配时出现_grokparsefailure
    tag_on_failure => [] 
  }
  if "sleep_drop" in [tags] {
    # 删除被标记为sleep的event
    drop {}
  }
  # 匹配slow log
  grok {
    match => [ "message", "(?m)^# User@Host: %{USER:user}\[[^\]]+\] @ (?:(?<clienthost>\S*) )?\[(?:%{IP:clientip})?\]\s*# Query_time: %{NUMBER:query_time:float}\s+Lock_time: %{NUMBER:lock_time:float}\s+Rows_sent: %{NUMBER:rows_sent:int}\s+Rows_examined: %{NUMBER:rows_examined:int}\s*(?:use %{DATA:database};\s*)?SET timestamp=%{NUMBER:timestamp};\s*(?<query>(?<action>\w+)\s+.*)\n# Time:.*$" ]
  }
  # 转换日期格式
  date {
    match => [ "timestamp", "UNIX" ]
    remove_field => [ "timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => '192.168.221.100:10010'
    index => 'mysql-slow-log-%{host}-%{+YYYY.MM.DD}'
  }
}